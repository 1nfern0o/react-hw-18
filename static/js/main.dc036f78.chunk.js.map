{"version":3,"sources":["Components/stylesComponents/images/logo.svg","Components/stylesComponents/stylesComponent.js","Components/SingIn.js","Components/SingUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Sing","section","SingWrapper","Logo","logo","Title","h2","LogoWrapper","Form","form","Input","input","InputCheckbox","LabelInput","label","InputText","span","Button","button","BlockLink","Error","a","Footer","footer","newState","password","email","SingIn","useState","state","setState","error","setError","onInput","e","inputName","currentTarget","name","value","prevState","onSubmit","key","preventDefault","type","onChange","placeholder","onChang","href","to","style","textDecoration","color","SingUp","useForm","register","errors","handleSubmit","onSubmin","data","alert","JSON","stringify","className","ref","required","minLength","pattern","_","get","fontSize","onClick","App","basename","exact","path","render","component","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dc036f78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d964e0b3.svg\";","import styled from \"styled-components\";\r\nimport logo from \"./images/logo.svg\";\r\n\r\nconst Container = styled.div`\r\n    max-width: 1140px;\r\n    padding: 0 15px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Sing = styled.section`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst SingWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 500px;\r\n    height: 100%;\r\n    padding: 50px;\r\n    background-color: #121212;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    background-color: #f48fb2;\r\n    background-image: url(${logo});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 20px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h2` margin: 0; `;\r\n\r\nconst LogoWrapper = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst InputBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    color: #fff;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #8f8f8f;\r\n    outline: none;\r\n    padding: 10px 15px;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 20px;\r\n    background-color: transparent;\r\n    \r\n`;\r\n\r\nconst InputCheckbox = styled.input`\r\n    margin-right: 15px;\r\n`;\r\n\r\nconst LabelInput = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst InputText = styled.span`\r\n    font-size: 18px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: #90caf9;\r\n    outline: none;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n    transition: all .2s ease-out;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    :hover {\r\n        background-color: #64aadb;\r\n    }\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst BlockLink = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 50px;\r\n    color: #90caf9;\r\n`;\r\n\r\nconst aLink = styled.a`\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #ea1919;\r\n  margin: o auto;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n    display: flex;\r\n    justify-content: center;\r\n    color: #777777\r\n`;\r\n\r\nexport { Container, Logo, Sing, SingWrapper, Title, LogoWrapper, Form, Input, InputBlock, InputCheckbox, InputText, Button, LabelInput, BlockLink, aLink, Error, Footer };\r\n\r\n/*Text forgot password: #6b94b5\r\n* Color placeholder: #8f8f8f\r\n* Color copyright: #777777\r\n* */","import React, { useState } from \"react\";\r\nimport {\r\n    Container,\r\n    Logo,\r\n    Sing,\r\n    SingWrapper,\r\n    Title,\r\n    LogoWrapper,\r\n    Form,\r\n    Input,\r\n    InputCheckbox,\r\n    Button,\r\n    LabelInput,\r\n    InputText,\r\n    BlockLink,\r\n    aLink,\r\n    Error,\r\n    Footer,\r\n} from \"./stylesComponents/stylesComponent\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst newState =  {\r\n    password: \"\",\r\n    email: \"\",\r\n}\r\n\r\nconst SingIn = () => {\r\n    const [state, setState] = useState(newState);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        for (let key in state) {\r\n            if (state[key] === \"\") {\r\n                setError(`You must enter a ${key}`);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onInput = (e) => {\r\n        const inputName = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n\r\n        setState((prevState) => ({\r\n            ...prevState,\r\n            [inputName]: value,\r\n        }));\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Sing>\r\n                <SingWrapper>\r\n                    <LogoWrapper>\r\n                        <Logo/>\r\n                        <Title>Sing in</Title>\r\n                    </LogoWrapper>\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={state.email}\r\n                            onChange={onInput}\r\n                            placeholder=\"Email address*\"\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={state.password}\r\n                            onChange={onInput}\r\n                            placeholder=\"Password*\"\r\n                        />\r\n                        <LabelInput>\r\n                            <InputCheckbox type=\"checkbox\" onChang={onInput}/>\r\n                            <InputText>Remember me</InputText>\r\n                        </LabelInput>\r\n                        {error && (\r\n                            <Error>\r\n                                <p>{error}</p>\r\n                            </Error>\r\n                        )}\r\n                        <Button>Sing in</Button>\r\n\r\n                        <BlockLink>\r\n                            <aLink href=\"#\">Forgot password?</aLink>\r\n                            <Link\r\n                                to=\"/register\"\r\n                                style={{\r\n                                    textDecoration: \"none\",\r\n                                    color: \"#90caf9\"\r\n                                }}\r\n                            >\r\n                                Don't have an account? Sing Up\r\n                            </Link>\r\n                        </BlockLink>\r\n                        <Footer>Copyright © Your Website 2020.</Footer>\r\n                </Form>\r\n                </SingWrapper>\r\n            </Sing>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SingIn;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\"\r\nimport _ from \"lodash/fp\"\r\nimport {\r\n    Container,\r\n    Logo,\r\n    Sing,\r\n    SingWrapper,\r\n    Title,\r\n    LogoWrapper,\r\n    Input,\r\n    InputBlock,\r\n    InputCheckbox,\r\n    Button,\r\n    LabelInput,\r\n    InputText,\r\n    BlockLink,\r\n    aLink,\r\n    Footer, Form\r\n} from \"./stylesComponents/stylesComponent\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SingUp = () => {\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const onSubmin = (data) => {\r\n        alert(JSON.stringify(data))\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Sing>\r\n                <SingWrapper>\r\n                    <LogoWrapper>\r\n                        <Logo/>\r\n                        <Title>Sing up</Title>\r\n                    </LogoWrapper>\r\n                    <Form onSubmit={handleSubmit(onSubmin)}>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                className=\"error-message\"\r\n                                placeholder=\"First Name*\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    minLength: 2,\r\n                                    pattern: /^[A-Za-z]+$/i,\r\n                                })}\r\n                            />\r\n                            {_.get(\"firstName.type\", errors) === \"minLength\" && (\r\n                                <p\r\n                                    style={{\r\n                                        color: \"red\",\r\n                                        fontSize: \"18px\"\r\n                                    }}\r\n                                >\r\n                                    First name must have at least 2 characters\r\n                                </p>\r\n                            )}\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                placeholder=\"Last Name*\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    minLength: 3,\r\n                                    pattern: /^[A-Za-z]+$/i,\r\n                                })}\r\n                            />\r\n                            {_.get(\"lastName.type\", errors) === \"pattern\" && (\r\n                                <p\r\n                                    style={{\r\n                                        color: \"red\",\r\n                                        fontSize: \"18px\"\r\n                                    }}\r\n                                >\r\n                                    Last name must have at least 3 characters\r\n                                </p>\r\n                            )}\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email address *\"\r\n                            ref={register({\r\n                                required: true,\r\n                                pattern: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n                            })}\r\n                        />\r\n                        {_.get(\"email.type\", errors) === \"pattern\" && (\r\n                            <p\r\n                                style={{\r\n                                    color: \"red\",\r\n                                    fontSize: \"18px\",\r\n                                }}\r\n                            >\r\n                                Enter the correct email.\r\n                            </p>\r\n                        )}\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password *\"\r\n                            ref={register({\r\n                                required: true,\r\n                                pattern: /(?=.*[a-z])(?=.*[A-Z])[0-9!@#$%^&*a-zA-Z]{8,}/g,\r\n                            })}\r\n                        />\r\n                        {_.get(\"password.type\", errors) === \"pattern\" && (\r\n                            <p\r\n                                style={{\r\n                                    color: \"red\",\r\n                                    fontSize: \"18px\",\r\n                                }}\r\n                            >\r\n                                Password must have at least 8 characters, uppercase and lowercase letters.\r\n                            </p>\r\n                        )}\r\n                        <LabelInput>\r\n                            <InputCheckbox type=\"checkbox\"/>\r\n                            <InputText>I want to receive inspiration, marketing promotions and updates via email.</InputText>\r\n                        </LabelInput>\r\n                    </Form>\r\n                    <Button type=\"button\" onClick={handleSubmit(onSubmin)}>Sing up</Button>\r\n                    <BlockLink>\r\n                        <aLink>Forgot password?</aLink>\r\n                        <Link\r\n                            to=\"/login\"\r\n                            style={{\r\n                                textDecoration: \"none\",\r\n                                color: \"#90caf9\"\r\n                            }}\r\n                        >\r\n                            Don't have an account? Sing Up\r\n                        </Link>\r\n                    </BlockLink>\r\n                    <Footer>Copyright © Your Website 2020.</Footer>\r\n                </SingWrapper>\r\n            </Sing>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SingUp;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport SingIn from \"./Components/SingIn\";\nimport SingUp from \"./Components/SingUp\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Router basename=\"/react-hw-18/\">\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n                        <Route exact path=\"/login\" component={SingIn}/>\n                        <Route exact path=\"/register\" component={SingUp}/>\n                    </Switch>\n                </Router>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}